#include <iostream>  
using namespace std;  
   
class myarray {  
    int *a;  
    int size;  
public:  

    myarray(int n) {  
        size = n;  
        a = new int[size];  
        for (int i = 0; i < size; i++) {  
            a[i] = 0;  
        }  
    }  
    ~myarray() {  
        delete[] a;  
    }  
    int& operator[](int index) {  
        if (index < 0 || index >= size) {  

            // Handle out-of-bounds error (you can throw an exception or handle it in another way)  
            cerr << "Index out of bounds!" << endl;  
            exit(1);  
        }  
        return a[index];  
    }  

    void getarray() {  
        cout << "Array elements: ";  
        for (int i = 0; i < size; i++) {  
            cout << a[i] << " ";  
        }  
        cout << endl;  
    }  
    void sort() {  
        for (int i = 0; i < size - 1; i++) {  
            int mindex = i;  
            for (int j = i + 1; j < size; j++) {  
                if (a[j] < a[mindex]) {  
                    mindex = j;  
                }  
            }  

            // Corrected swap function  

            int temp = a[mindex];  
            a[mindex] = a[i];  
            a[i] = temp;  
        } 
    } 
};  

int main() {  
    // Example of using myarray class  
    int arraySize = 5;  
    myarray myArr(arraySize);  

    cout << "Enter " << arraySize << " elements for the array:" << endl;  
    for (int i = 0; i < arraySize; i++) {  
        cin >> myArr[i];  
    }  
    cout << "Before sorting:" << endl;  
    myArr.getarray();  
    myArr.sort();  
    cout << "After sorting:" << endl;  
    myArr.getarray();  
    return 0;  
}  

 
Bubble sort:-  

#include <iostream>  
using namespace std;  
class myarray {  
    int *a;  
    int size;  
public:  

    myarray(int n) {  
        size = n;  
        a = new int[size];  
        for (int i = 0; i < size; i++) {  
            a[i] = 0;  
        }  
    }  
    ~myarray() {  
        delete[] a;  
    }  

    void getarray() {  
        cout << "Array elements: ";  
        for (int i = 0; i < size; i++) {  
            cout << a[i] << " ";  
        }  
        cout << endl;  
    }  

    void sort() {  
        for (int i = 0; i < size - 1; i++) {  
            for (int j = 0; j < size - 1 - i; j++) {  
                if (a[j] > a[j + 1]) {  
                    swap(a[j], a[j + 1]);  

                }  
            }  
        }  
    }  
    
    // Overloaded operator[] for indexing  

    int& operator[](int index) {  

        if (index >= 0 && index < size) {  
            return a[index];  
        } 
        else {  
            cerr << "Index out of bounds!" << endl;  
            exit(1);  
        } 
    }  
};  
int main() {  
    int n;  
    cout << "Enter the size of the array: ";  
    cin >> n;
    
    myarray arr(n);  
    cout << "Enter " << n << " elements for the array:" << endl;  

    for (int i = 0; i < n; i++) {  
        cin >> arr[i];  
    }  
    cout << "Before sorting:" << endl;  

    arr.getarray();  
    arr.sort();  
    cout << "After sorting:" << endl;  
    arr.getarray();  

    return 0;  
}  
 

Insertion Sort:-  

#include <iostream>  
using namespace std;  

class myarray {  
    int *a;  
    int size;  

public:  
    myarray(int n) {  

        size = n;  
        a = new int[size];  
        for (int i = 0; i < size; i++) {  
            a[i] = 0;  
        }  
    }  
    ~myarray() {  

        delete[] a;  

    }  
    void setElement(int index, int value) {  

        if (index >= 0 && index < size) {  
            a[index] = value;  

        } 
        else {  
           cout << "Index out of bounds." << endl;  
        }  
    }  
    void getarray() {  

        cout << "Array elements: ";  

        for (int i = 0; i < size; i++) {  
            cout << a[i] << " ";  
        }  
        cout << endl;  
    }  
    void sort() {  

        for (int i = 1; i < size; i++) {  
            int j = i - 1;  
            int temp = a[i];  
            while (j >= 0 && a[j] > temp) { 

                a[j + 1] = a[j];  
                j--;  
            }  
            a[j + 1] = temp;  
        }  
    }  
};  

int main() {  

    int arraySize = 5;  

    myarray myArr(arraySize);  

    cout << "Enter " << arraySize << " elements for the array:" << endl;  
    for (int i = 0; i < arraySize; i++) {  
        int value;  
        cin >> value;  
        myArr.setElement(i, value);  
    }  

    cout << "Before sorting:" << endl;  
    myArr.getarray();  

    myArr.sort();  
    
    cout << "After sorting:" << endl;  

     myArr.getarray();  

    return 0;  
} 
